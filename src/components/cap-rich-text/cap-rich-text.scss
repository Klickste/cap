////
/// @group rich-text
/// @author cgoern
////

// ==========================================================================
// Modules
// ==========================================================================

@use 'sass:list';

// ==========================================================================
// Variables
// ==========================================================================

$headingLevels: ('4xl', '3xl', '2xl', 'xl', 'lg', 'md');
$families: ('sans', 'serif', 'mono');

// ==========================================================================
// Documentation
// ==========================================================================

/** @prop --cap-rich-text-anchor-color: Description... */
/** @prop --cap-rich-text-horizontal-rule-background: Description... */
/** @prop --cap-rich-text-horizontal-rule-height: Description... */
/** @prop --cap-rich-text-list-item-before-color: Description... */
/** @prop --cap-rich-text-list-item-before-content: Description... */
/** @prop --cap-rich-text-list-item-paddingLeft: Description... */

// ==========================================================================
// Rules
// ==========================================================================

cap-rich-text {
  display: flex;
  flex-direction: column;
  font-family: var(--cap-rich-text-fontFamily);
  font-feature-settings: var(--cap-rich-text-fontFeatureSettings);
  gap: var(--cap-rich-text-gap, 32px);

  @each $family in $families {
    &.#{$family} {
      --cap-rich-text-base-fontWeight: var(--cap-fontWeight-soft-#{$family});
      --cap-rich-text-base-letterSpacing: var(--cap-letterSpacing-md-#{$family}, normal);
      --cap-rich-text-base-trimOffset: var(--cap-trimOffset-md-#{$family});
      --cap-rich-text-fontFamily: var(--cap-fontFamily-#{$family});
      --cap-rich-text-fontFeatureSettings: var(--cap-fontFeatureSettings-#{$family});
      --cap-rich-text-heading-fontWeight: var(--cap-fontWeight-heavy-#{$family});

      @for $heading from 1 through 6 {
        $level: list.nth($headingLevels, $heading);

        --cap-rich-text-heading-#{$heading}-letterSpacing: var(
          --cap-letterSpacing-#{$level}-#{$family},
          normal
        );
        --cap-rich-text-heading-#{$heading}-trimOffset: var(--cap-trimOffset-#{$level}-#{$family});
      }
    }
  }

  * {
    margin: 0;
    font-size: var(--cap-rich-text-child-fontSize);
    letter-spacing: var(--cap-rich-text-child-letterSpacing);
    line-height: var(--cap-rich-text-child-lineHeight);
    font-weight: var(--cap-rich-text-child-fontWeight);
  }

  > *:not(hr) {
    padding-bottom: 1px;
    padding-top: 1px;

    &::before,
    &::after {
      content: '';
      display: block;
      height: 0;
    }

    &::before {
      margin-top: calc((var(--cap-rich-text-child-trimOffset) + 1px) * -1);
    }

    &::after {
      margin-bottom: calc((var(--cap-rich-text-child-trimOffset) + 1px) * -1);
    }
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    --cap-rich-text-child-fontWeight: var(--cap-rich-text-heading-fontWeight);
  }

  @for $heading from 1 through 6 {
    $level: list.nth($headingLevels, $heading);

    h#{$heading} {
      --cap-rich-text-child-fontSize: var(--cap-fontSize-#{$level});
      --cap-rich-text-child-letterSpacing: var(--cap-rich-text-heading-#{$heading}-letterSpacing);
      --cap-rich-text-child-lineHeight: var(--cap-lineHeight-#{$level});
      --cap-rich-text-child-trimOffset: var(--cap-rich-text-heading-#{$heading}-trimOffset);
    }
  }

  p,
  ul,
  ol {
    --cap-rich-text-child-fontSize: var(--cap-fontSize-md);
    --cap-rich-text-child-fontWeight: var(--cap-rich-text-base-fontWeight);
    --cap-rich-text-child-letterSpacing: var(--cap-rich-text-base-letterSpacing);
    --cap-rich-text-child-lineHeight: var(--cap-lineHeight-md);
    --cap-rich-text-child-trimOffset: var(--cap-rich-text-base-trimOffset);
  }

  ul,
  ol {
    list-style: none;
    padding-left: 0;
  }

  ul {
    li {
      &::before {
        color: var(--cap-rich-text-list-item-before-color, inherit);
        content: var(--cap-rich-text-list-item-before-content, 'â€¢');
      }
    }
  }

  ol {
    counter-reset: order;

    li {
      &::before {
        content: counter(order) '.';
        counter-increment: order;
      }
    }
  }

  li {
    padding-left: var(--cap-rich-text-list-item-paddingLeft, 32px);
    position: relative;

    &::before {
      left: 0;
      position: absolute;
      top: 0;
    }
  }

  a {
    color: var(--cap-rich-text-anchor-color, blue);
  }

  hr {
    background: var(--cap-rich-text-horizontal-rule-background, lightgray);
    border: 0;
    height: var(--cap-rich-text-horizontal-rule-height, 2px);
  }
}
