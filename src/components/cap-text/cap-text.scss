////
/// @group text
/// @author cgoern
////

// ==========================================================================
// Modules
// ==========================================================================

@use 'sass:list';
@use 'sass:string';

// ==========================================================================
// Variables
// ==========================================================================

$levels: (
  '-8': '7xs',
  '-7': '6xs',
  '-6': '5xs',
  '-5': '4xs',
  '-4': '3xs',
  '-3': '2xs',
  '-2': 'xs',
  '-1': 'sm',
  '0': 'md',
  '+1': 'lg',
  '+2': 'xl',
  '+3': '2xl',
  '+4': '3xl',
  '+5': '4xl',
  '+6': '5xl',
  '+7': '6xl',
  '+8': '7xl',
);
$weights: ('soft', 'strong', 'heavy');

// ==========================================================================
// Rules
// ==========================================================================

:host {
  display: block;
  min-width: var(--cap-text-minWidth, auto);
  padding-bottom: 1px;
  padding-top: 1px;

  &::before,
  &::after {
    content: '';
    display: block;
    height: 0;
  }

  &::before {
    margin-top: calc((var(--cap-text-trimOffset) + 1px) * -1);
  }

  &::after {
    margin-bottom: calc((var(--cap-text-trimOffset) + 1px) * -1);
  }

  @at-root {
    #{&}(.no-wrap) {
      --cap-text-content-whiteSpace: nowrap;
    }

    #{&}(.ellipsis) {
      --cap-text-minWidth: 0;
      --cap-text-content-overflow: hidden;
      --cap-text-content-textOverflow: ellipsis;
      --cap-text-content-whiteSpace: nowrap;
      --cap-text-content-width: 100%;
    }

    #{&}(.italic) {
      --cap-text-content-fontStyle: italic;
    }

    @each $level, $size in $levels {
      #{&}(.#{if(string.index($level, '-') or string.index($level, '+'), '\\#{$level}', '\\3#{$level}')}) {
        --cap-text-content-fontSize: var(--cap-fontSize-#{$size});
        --cap-text-content-lineHeight: var(--cap-lineHeight-#{$size});
        --cap-text-content-letterSpacing: var(--cap-letterSpacing-#{$size});
        --cap-text-trimOffset: var(--cap-trimOffset-#{$size});
      }
    }

    @each $weight in $weights {
      #{&}(.#{$weight}) {
        --cap-text-content-fontWeight: var(--cap-fontWeight-#{$weight});
      }
    }
  }
}

.content {
  font-size: var(--cap-text-content-fontSize);
  font-weight: var(--cap-text-content-fontWeight);
  letter-spacing: var(--cap-text-content-letterSpacing);
  line-height: var(--cap-text-content-lineHeight);
  margin: 0;
  overflow: var(--cap-text-content-overflow, visible);
  text-overflow: var(--cap-text-content-textOverflow, clip);
  white-space: var(--cap-text-content-whiteSpace, normal);
  width: var(--cap-text-content-width, auto);
  font-style: var(--cap-text-content-fontStyle, normal);

  &[data-content-before] {
    &:before {
      content: attr(data-content-before) '\0000A0';
    }
  }

  &[data-content-after] {
    &:after {
      content: '\0000A0'attr(data-content-after);
    }
  }
}
