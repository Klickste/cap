// ==========================================================================
// Modules
// ==========================================================================

@use 'sass:math';
@use 'sass:map';
@use './../../cap';

// ==========================================================================
// Rules
// ==========================================================================

:host {
	display: block;
	font-family: var(--cap-text-font-family);
	font-feature-settings: var(--cap-text-font-feature-settings);
	font-kerning: normal;
	font-size: var(--cap-text-font-size);
	font-variation-settings:
		'wght' var(--cap-text-font-weight),
		'opsz' var(--cap-text-font-optical-sizing);
	font-style: var(--cap-text-font-style, normal);
	letter-spacing: var(--cap-text-letter-spacing);
	line-height: calc(var(--cap-text-line-height) + var(--cap-text-leading));
	padding-bottom: 1px;
	padding-top: 1px;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	-webkit-text-size-adjust: none;

	// ==========================================================================
	// Leading trim
	// ==========================================================================

	&::before,
	&::after {
		content: '';
		display: block;
		height: 0;
	}

	&::before {
		margin-top: calc((var(--cap-text-leading-trim) + 1px + (var(--cap-text-leading) / 2)) * -1);
	}

	&::after {
		margin-bottom: calc((var(--cap-text-leading-trim) + 1px + (var(--cap-text-leading) / 2)) * -1);
	}

	@at-root {
		// ==========================================================================
		// Misc
		// ==========================================================================

		#{&}([ellipsis]) {
			--cap-text-content-overflow: hidden;
			--cap-text-content-text-overflow: ellipsis;
			--cap-text-content-white-space: nowrap;
			--cap-text-content-width: 100%;
			--cap-text-content-min-width: 0;
		}

		#{&}([no-wrap]) {
			--cap-text-content-white-space: nowrap;
			--cap-text-content-width: 100%;
			--cap-text-content-min-width: 0;
		}

		#{&}([italic]) {
			--cap-text-font-style: italic;
		}

		// ==========================================================================
		// Levels
		// ==========================================================================

		@for $level from (cap.$levels-down * -1) through cap.$levels-up {
			$sign: '';
			$attribute: '0';

			@if $level < 0 {
				$sign: 'minus-';
				$attribute: $level;
			} @else if $level > 0 {
				$sign: 'plus-';
				$attribute: '+' + $level;
			}

			#{&}([level='#{$attribute}']) {
				--cap-text-font-size: var(--cap-font-size-#{$sign + math.abs($level)});
				--cap-text-font-optical-sizing: var(--cap-font-optical-sizing-#{$sign + math.abs($level)});
				--cap-text-line-height: var(--cap-line-height-#{$sign + math.abs($level)});

				@each $family in map.keys(cap.$families) {
					--cap-text-leading-trim-#{$family}: var(--cap-leading-trim-#{$sign + math.abs($level)}-#{$family});
					--cap-text-letter-spacing-#{$family}: var(--cap-letter-spacing-#{$sign + math.abs($level)}-#{$family});
				}
			}
		}

		// ==========================================================================
		// Families
		// ==========================================================================

		@each $family in map.keys(cap.$families) {
			#{&}([family='#{$family}']) {
				--cap-text-font-family: var(--cap-font-family-#{$family});
				--cap-text-font-feature-settings: var(--cap-font-feature-settings-#{$family});
				--cap-text-leading-trim: var(--cap-text-leading-trim-#{$family});
				--cap-text-letter-spacing: var(--cap-text-letter-spacing-#{$family});
				--cap-text-font-weight: var(--cap-text-font-weight-#{$family});
			}
		}

		// ==========================================================================
		// Weights
		// ==========================================================================

		@each $weight in ('soft', 'strong', 'heavy') {
			#{&}([weight='#{$weight}']) {
				@each $family in map.keys(cap.$families) {
					--cap-text-font-weight-#{$family}: var(--cap-font-weight-#{$weight}-#{$family});
				}
			}
		}

		// ==========================================================================
		// Leadings
		// ==========================================================================

		@each $leading in map.keys(cap.$leadings) {
			#{&}([leading='#{$leading}']) {
				--cap-text-leading: var(--cap-leading-#{$leading});
			}
		}

		// ==========================================================================
		// Content before/after
		// ==========================================================================

		#{&}([content-before]) {
			.content::before {
				content: attr(data-before);
			}
		}

		#{&}([content-after]) {
			.content::after {
				content: attr(data-after);
			}
		}
	}
}

// ==========================================================================
// Content
// ==========================================================================

.content {
	display: block;
	text-overflow: var(--cap-text-content-text-overflow, clip);
	white-space: var(--cap-text-content-white-space, normal);
	width: var(--cap-text-content-width, auto);
	min-width: var(--cap-text-content-min-width, auto);
	overflow: var(--cap-text-content-overflow, visible);
}

.inline {
	border-top: var(--cap-text-inline-border-top, 0);
	border-bottom: var(--cap-text-inline-border-bottom, 0);
	border-left: var(--cap-text-inline-border-left, 0);
	border-right: var(--cap-text-inline-border-right, 0);
}

// ==========================================================================
// Slots
// ==========================================================================

::slotted(a) {
	color: var(--cap-text-anchor-color, blue);
	text-decoration-line: var(--cap-text-anchor-text-decoration-line, underline);
	text-decoration-color: var(--cap-text-anchor-text-decoration-color, currentColor);
	text-decoration-style: var(--cap-text-anchor-text-decoration-style, solid);
	text-decoration-thickness: var(--cap-text-anchor-text-decoration-thickness, auto);
	text-underline-offset: var(--cap-text-anchor-text-underline-offset, auto);
}

::slotted(strong) {
	font-variation-settings: 'wght' var(--cap-text-strong-font-weight, 700);
	color: var(--cap-text-strong-color, inherit);
}
