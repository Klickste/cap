////
/// @group fonts
/// @author cgoern
////

// ==========================================================================
// Modules
// ==========================================================================

@use 'sass:math';
@use './config';

// ==========================================================================
// Functions
// ==========================================================================

/// Description...
///
/// @since 1.0.0
///
/// @param {number} $fontSize - Description...
/// @param {number} $lineHeight - Description...
/// @param {number} $upm - Description...
/// @param {number} $capHeight - Description...
@function calcTrimOffset($fontSize, $lineHeight, $upm, $capHeight) {
  $boxHeight: 0px;

  @if config.$roundEven {
    $boxHeight: 2 * math.round(math.div(((math.div($capHeight, $upm)) * $fontSize), 2));
  } @else {
    $boxHeight: math.round(math.div($capHeight, $upm) * $fontSize);
  }

  @return math.div(($lineHeight - $boxHeight), 2);
}

/// Description...
///
/// @since 1.0.0
///
/// @param {number} $size - Description...
/// @param {number} $a - Description...
/// @param {number} $b - Description...
/// @param {number} $c - Description...
@function calcRatio($size, $a, $b, $c) {
  $d: math.div($size, 1px);

  @return ($a + ($b * math.pow(math.$e, $c * $d)));
}

/// Description...
///
/// @since 1.0.0
///
/// @param {number} $fontSize - Description...
/// @param {number} $spacing - Description...
@function calcLetterSpacing($fontSize, $spacing) {
  $ratio: calcRatio($fontSize, -0.0223, 0.185, -0.1745 + math.div($spacing, 100));

  @return math.div(math.round($ratio * 1000), 1000) * 1em;
}

/// Description...
///
/// @since 1.0.0
///
/// @param {number} $fontSize - Description...
@function calcLineHeight($fontSize) {
  $ratio: calcRatio($fontSize, 1.2, 1.8, -0.12);

  @if config.$roundEven {
    @return math.round(math.div($fontSize * $ratio, 2)) * 2;
  } @else {
    @return math.round($fontSize * $ratio);
  }
}

/// Description...
///
/// @since 1.0.0
///
/// @param {number} $base - Description...
/// @param {number} $factor - Description...
/// @param {number} $scale - Description...
@function calcFontSize($base, $factor, $scale) {
  @return math.round($base * math.pow($factor, $scale));
}

// ==========================================================================
// Mixins
// ==========================================================================

/// Description...
///
/// @since 2.0.0
///
/// @param {string} $name - Description...
@mixin trim($name) {
  padding-bottom: 1px;
  padding-top: 1px;

  &::before,
  &::after {
    content: '';
    display: block;
    height: 0;
  }

  &::before {
    margin-top: calc((var(--#{config.$namespace}-#{$name}-trimOffset) + 1px) * -1);
  }

  &::after {
    margin-bottom: calc((var(--#{config.$namespace}-#{$name}-trimOffset) + 1px) * -1);
  }
}
